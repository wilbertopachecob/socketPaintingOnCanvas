name: Merge Guard

on:
  pull_request:
    branches: [ main, master, develop ]
  workflow_run:
    workflows: ["CI"]
    types: [completed]

jobs:
  # This is the main job that GitHub branch protection will check
  # It ensures all CI checks pass before allowing merge
  merge-readiness-check:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' || (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion != 'cancelled')
    
    steps:
    - name: Get PR details
      id: pr
      uses: actions/github-script@v7
      if: github.event_name == 'workflow_run'
      with:
        script: |
          const pull_requests = await github.rest.pulls.list({
            owner: context.repo.owner,
            repo: context.repo.repo,
            head: `${context.repo.owner}:${context.payload.workflow_run.head_branch}`,
            state: 'open'
          });
          
          if (pull_requests.data.length > 0) {
            return pull_requests.data[0].number;
          }
          return null;
    
    - name: Check CI workflow status
      uses: actions/github-script@v7
      with:
        script: |
          const pr_number = github.event_name === 'pull_request' 
            ? github.event.pull_request.number 
            : '${{ steps.pr.outputs.result }}';
          
          if (!pr_number) {
            console.log('No PR found for this workflow run');
            return;
          }
          
          // Get the latest workflow runs for this PR
          const workflows = await github.rest.actions.listWorkflowRunsForRepo({
            owner: context.repo.owner,
            repo: context.repo.repo,
            workflow_id: 'ci.yml',
            head_sha: github.event_name === 'pull_request' 
              ? github.event.pull_request.head.sha 
              : github.event.workflow_run.head_sha
          });
          
          const latestRun = workflows.data.workflow_runs[0];
          
          if (!latestRun) {
            core.setFailed('No CI workflow run found');
            return;
          }
          
          console.log(`Latest CI run status: ${latestRun.status}`);
          console.log(`Latest CI run conclusion: ${latestRun.conclusion}`);
          
          if (latestRun.status !== 'completed') {
            core.setFailed('CI workflow is still running');
            return;
          }
          
          if (latestRun.conclusion !== 'success') {
            core.setFailed(`CI workflow failed with conclusion: ${latestRun.conclusion}`);
            return;
          }
          
          console.log('✅ All CI checks passed - PR is ready for merge');

  # Additional check for merge conflicts
  conflict-check:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' || (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion != 'cancelled')
    
    steps:
    - name: Get PR details for workflow_run
      id: pr-details
      uses: actions/github-script@v7
      if: github.event_name == 'workflow_run'
      with:
        script: |
          const pull_requests = await github.rest.pulls.list({
            owner: context.repo.owner,
            repo: context.repo.repo,
            head: `${context.repo.owner}:${context.payload.workflow_run.head_branch}`,
            state: 'open'
          });
          
          if (pull_requests.data.length > 0) {
            return pull_requests.data[0].number;
          }
          return null;
    
    - name: Check for merge conflicts
      uses: actions/github-script@v7
      with:
        script: |
          const pr_number = github.event_name === 'pull_request' 
            ? github.event.pull_request.number 
            : '${{ steps.pr-details.outputs.result }}';
          
          if (!pr_number || pr_number === 'null') {
            console.log('No PR found for this workflow run');
            return;
          }
          
          const pr = await github.rest.pulls.get({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: parseInt(pr_number)
          });
          
          if (pr.data.mergeable === false) {
            core.setFailed('❌ PR has merge conflicts - please resolve before merging');
          } else if (pr.data.mergeable === null) {
            console.log('⏳ Merge status is being calculated...');
          } else {
            console.log('✅ No merge conflicts detected');
          }

  # Final gate - all checks must pass
  all-checks-complete:
    runs-on: ubuntu-latest
    needs: [merge-readiness-check, conflict-check]
    if: always() && (github.event_name == 'pull_request' || (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion != 'cancelled'))
    
    steps:
    - name: Get PR details for workflow_run
      id: final-pr-details
      uses: actions/github-script@v7
      if: github.event_name == 'workflow_run'
      with:
        script: |
          const pull_requests = await github.rest.pulls.list({
            owner: context.repo.owner,
            repo: context.repo.repo,
            head: `${context.repo.owner}:${context.payload.workflow_run.head_branch}`,
            state: 'open'
          });
          
          if (pull_requests.data.length > 0) {
            return {
              number: pull_requests.data[0].number,
              head_sha: pull_requests.data[0].head.sha
            };
          }
          return null;
    
    - name: Verify all checks passed
      run: |
        if [[ "${{ needs.merge-readiness-check.result }}" != "success" ]]; then
          echo "❌ Merge readiness check failed"
          exit 1
        fi
        
        if [[ "${{ needs.conflict-check.result }}" != "success" ]]; then
          echo "❌ Conflict check failed"
          exit 1
        fi
        
        echo "✅ All merge guards passed - PR is ready for merge"
    
    - name: Update PR status
      uses: actions/github-script@v7
      if: github.event_name == 'pull_request' || (github.event_name == 'workflow_run' && fromJSON(steps.final-pr-details.outputs.result || 'null') != null)
      with:
        script: |
          let sha;
          
          if (github.event_name === 'pull_request') {
            sha = github.event.pull_request.head.sha;
          } else {
            const prDetails = JSON.parse('${{ steps.final-pr-details.outputs.result }}' || 'null');
            if (!prDetails) {
              console.log('No PR found for this workflow run');
              return;
            }
            sha = prDetails.head_sha;
          }
          
          await github.rest.repos.createCommitStatus({
            owner: context.repo.owner,
            repo: context.repo.repo,
            sha: sha,
            state: 'success',
            target_url: `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`,
            description: 'All merge requirements satisfied',
            context: 'merge-guard/all-checks'
          });
